// bomberfish
// OnboardingExploitSelect.swift â€“ Picasso
// created on 2023-12-08

import SwiftUI

struct OnboardingExploitSelect: View {
    @AppStorage("firstOpen") private var firstTime: Bool = true
    @AppStorage("currentExploit") private var currentExploit: String = ExploitKit.shared.selectedExploit.rawValue
    @ObservedObject var exploitKit = ExploitKit.shared
    init() {
        exploitKit.SelectExploit()
    }
//    private var compatibleExploits: Binding<[ExploitType]> {
//        Binding<[ExploitType]>(get: {
//            exploitKit.SelectExploit()
//            return exploitKit.compatibleExploits
//        }, set: { newValue in
//            exploitKit.compatibleExploits = newValue
//        })
//    }
    var body: some View {
        ZStack {
            OnboardingBGView()
            VStack {
                Spacer()
                Image(systemName: "terminal")
                    .resizable()
                    .aspectRatio(contentMode: .fit)
                    .frame(maxHeight: 75)
                    .padding(.bottom, 8)
                    .foregroundColor(.accentColor)
                Text("Select an exploit")
                    .font(.system(size: 28, weight: .bold))
                Label("\(exploitKit.ExploitTypeToName(exploitKit.GetRecommendedExploit())) is recommended for your device.", systemImage: "info.circle")
                    .padding(.top, 10)
                    .foregroundColor(.secondary)
                Picker("Exploit", selection: $currentExploit, content: {
                    ForEach(exploitKit.GetCompatibleExploits(), id: \.self) {exploit in
                        Text(exploitKit.ExploitTypeToName(exploit))
                            .tag(exploit.rawValue)
                    }
                })
                .onAppear {
                    exploitKit.SelectExploit()
                }
                .pickerStyle(.wheel)
                Spacer()
                NavigationLink(destination: LoginView(onLogin: {firstTime = false}), label: {
                    Text("Next")
                        .padding(12)
                        .frame(maxWidth: .infinity)
                        .font(.body.weight(.bold))
                        .background(Color.accentColor)
                        .foregroundColor(Color(UIColor.systemBackground))
                        .cornerRadius(12)
                })
                .padding(.horizontal)
            }
            .frame(maxWidth: .infinity, maxHeight: .infinity)
            .background(.thickMaterial)
        }
    }
}
